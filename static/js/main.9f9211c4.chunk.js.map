{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Notification.js","components/Statistics/Statistics.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Options","onGood","onNeutral","onBad","name","type","onClick","SectionTitles","title","children","Notification","message","Statistics","Good","Neutral","Bad","Total","feedback","Feedback","state","good","neutral","bad","hendleGood","setState","prevState","hendleNeutral","hendleBad","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Section","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAeeA,EAfC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACpC,OACE,oCACE,wBAAQC,KAAK,OAAOC,KAAK,SAASC,QAASL,EAA3C,kBAGA,wBAAQG,KAAK,UAAUC,KAAK,SAASC,QAASJ,EAA9C,qBAGA,wBAAQE,KAAK,MAAMC,KAAK,SAASC,QAASH,EAA1C,qBCASI,EATO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9B,OACE,oCACE,6BAAKD,IACJC,MCGQC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,4BAAIA,OCcKC,EAfI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OAAID,EAEA,oCACE,sCAASH,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,UAIG,cAAC,EAAD,CAAcN,QAAQ,uBC8ClBO,E,4MAvDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,KAAMK,EAAUL,KAAO,O,EAG3BM,cAAgB,WACd,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,QAAU,O,EAGjCM,UAAY,WACV,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,IAAKG,EAAUH,IAAM,O,EAGzBM,mBAAqB,kBACnB,EAAKT,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAEpDO,gCAAkC,WAChC,OAAI,EAAKD,sBACE,EAAKT,MAAMC,KAAO,EAAKQ,qBAAwB,KAAKE,UACjD,G,4CAEhB,WACE,OACE,gCACE,uDACA,cAAC,EAAD,CACE7B,OAAQ8B,KAAKR,WACbrB,UAAW6B,KAAKL,cAChBvB,MAAO4B,KAAKJ,YAEd,cAACK,EAAD,CACExB,MAAO,aACPC,SACE,cAAC,EAAD,CACEI,KAAMkB,KAAKZ,MAAMC,KACjBN,QAASiB,KAAKZ,MAAME,QACpBN,IAAKgB,KAAKZ,MAAMG,IAChBN,MAAOe,KAAKH,qBACZX,SAAUc,KAAKF,6C,GA/CNI,IAAMC,WCEdC,EAJH,WACV,OAAO,cAAC,EAAD,K,MCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f9211c4.chunk.js","sourcesContent":["const Options = ({ onGood, onNeutral, onBad }) => {\r\n  return (\r\n    <section>\r\n      <button name=\"good\" type=\"button\" onClick={onGood}>\r\n        Good\r\n      </button>\r\n      <button name=\"neutral\" type=\"button\" onClick={onNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button name=\"bad\" type=\"button\" onClick={onBad}>\r\n        Bad\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\nexport default Options;\r\n","const SectionTitles = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SectionTitles;\r\n","const Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Notification;\r\n","import Notification from './Notification';\r\n\r\nconst Statistics = ({ Good, Neutral, Bad, Total, feedback }) => {\r\n  if (Total) {\r\n    return (\r\n      <section>\r\n        <p>Good:{Good}</p>\r\n        <p>Neutral:{Neutral}</p>\r\n        <p>Bad:{Bad}</p>\r\n        <p>Total:{Total}</p>\r\n        <p>Positive feedback:{feedback}%</p>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <Notification message=\"No feedback given\" />;\r\n  }\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport Options from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Sections from '../Statistics/Statistics';\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  hendleGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n  hendleNeutral = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n  hendleBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    if (this.countTotalFeedback()) {\r\n      return ((this.state.good / this.countTotalFeedback()) * 100).toFixed();\r\n    } else return 0;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Please leave feedback</h1>\r\n        <Options\r\n          onGood={this.hendleGood}\r\n          onNeutral={this.hendleNeutral}\r\n          onBad={this.hendleBad}\r\n        />\r\n        <Section\r\n          title={'Statistics'}\r\n          children={\r\n            <Sections\r\n              Good={this.state.good}\r\n              Neutral={this.state.neutral}\r\n              Bad={this.state.bad}\r\n              Total={this.countTotalFeedback()}\r\n              feedback={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import Feedback from './components/Feedback/Feedback';\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}